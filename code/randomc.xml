<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>clock GTime;

//Place global declarations here.
typedef double zonotope_t[4];
const int max_zonotopes = 64-1;
const int max_setListsPa= 64-1;
const int max_listPa    = 22-1;
const int max_paLen     = 3-1;
typedef int[0,max_zonotopes]  id_zonotope_t;
typedef int[0,max_setListsPa] id_list_patterns_t;
typedef int[0,max_listPa]     id_pattern_t;
typedef int[0,max_paLen]      pattern_len_t;   // 8
typedef int[0,max_zonotopes]  zid_t;
id_list_patterns_t ind_l_patterns     = 0;
id_pattern_t       p_id               = 0;
double             x[3]               = {0.0 , 0.0, 0.0};
int                availableInPattern = 0;
int                visitedPatterns    = 0;
int                ppos               = 0;
int                mode               = 0;
const int modes[8][4]    = {{ 1,0,0,0 },{ 1,1,0,0 },{ 2,0,0,0 },{ 2,1,0,0 },{ 3,0,0,1 },{ 3,1,0,1 },{ 2,0,0,1 },{ 2,1,0,1}};
typedef int dist_t[2][100];
/*
R = [ [0.1,0.3], [40,70]] 
S = [ [0.09,0.31], [30,80]] 
*/
// factors
const double factorTe = 2.50000; 
//HOLDER_factorTe
const double factorI  = 0.80000; 
//HOLDER_factorI
const double factorKe = 1.00000; 
//HOLDER_factorKe
const double rateVo   = 0.01000; 
//HOLDER_rateVo
const double TwaterIn = 22.50000; 
//HOLDER_TwaterIn
const double tau      = 300.00000; 
//HOLDER_tau

// Forecasting 
const double T_env[210]= {7.233333333333333,7.226666666666667,7.22,7.213333333333334,7.206666666666667,7.2,7.193333333333333,7.1866666666666665,7.18,7.173333333333334,7.166666666666667,7.16,7.153333333333333,7.1466666666666665,7.14,7.133333333333333,7.126666666666666,7.12,7.113333333333333,7.1066666666666665,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.1,7.093333333333333,7.086666666666666,7.08,7.073333333333333,7.066666666666666,7.06,7.053333333333333,7.046666666666667,7.04,7.033333333333333,7.026666666666666,7.02,7.013333333333334,7.006666666666667,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.02,7.04,7.06,7.08,7.1,7.12,7.14,7.16,7.18,7.2,7.22,7.24,7.26,7.28,7.3,7.326666666666666,7.3533333333333335,7.38,7.406666666666666,7.433333333333334,7.46,7.486666666666666,7.513333333333334,7.54,7.566666666666666,7.593333333333334,7.62,7.6466666666666665,7.673333333333334,7.7,7.726666666666667,7.753333333333334,7.78,7.806666666666667,7.833333333333333,7.86,7.886666666666667,7.913333333333333,7.9399999999999995,7.966666666666667,7.993333333333333,8.02,8.046666666666667,8.073333333333332,8.1,8.133333333333333,8.166666666666666,8.2,8.233333333333333,8.266666666666666,8.299999999999999,8.333333333333332,8.366666666666667,8.4,8.433333333333334,8.466666666666667,8.5,8.533333333333333,8.566666666666666,8.6,8.646666666666667,8.693333333333333,8.74,8.786666666666667,8.833333333333334,8.88,8.926666666666668,8.973333333333333,9.02,9.066666666666666,9.113333333333333,9.16,9.206666666666667,9.253333333333334,9.3,9.346666666666668,9.393333333333334,9.440000000000001,9.486666666666666,9.533333333333333,9.58,9.626666666666667,9.673333333333334,9.72,9.766666666666667,9.813333333333333,9.86,9.906666666666666,9.953333333333333,10.0,10.046666666666667,10.093333333333334,10.14,10.186666666666666,10.233333333333333,10.28,10.326666666666666,10.373333333333333,10.42,10.466666666666667,10.513333333333332,10.559999999999999,10.606666666666666,10.653333333333332,10.7,10.746666666666666,10.793333333333333,10.84,10.886666666666667,10.933333333333334,10.98,11.026666666666667,11.073333333333332,11.12,11.166666666666666,11.213333333333333,11.26,11.306666666666667,11.353333333333333,11.4,11.44,11.48,11.52,11.56,11.6,11.64,11.68,11.72,11.76}; 
//HOLDER_T_env[H+1]
const double T_in[210] = {22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5}; 
//HOLDER_T_in[H+1]
const double I[210]    = {0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,6.066666666666666,12.133333333333333,18.2,24.266666666666666,30.333333333333332,36.4,42.46666666666667,48.53333333333333,54.6,60.666666666666664,66.73333333333333,72.8,78.86666666666666,84.93333333333334,91.0,97.26666666666667,103.53333333333333,109.8,116.06666666666666,122.33333333333334,128.6,134.86666666666667,141.13333333333333,147.4,153.66666666666669,159.93333333333334,166.2,172.46666666666667,178.73333333333335,185.0,189.33333333333334,193.66666666666666,198.0,202.33333333333334,206.66666666666666,211.0,215.33333333333334,219.66666666666666,224.0,228.33333333333331,232.66666666666666,237.0,241.33333333333331,245.66666666666666,250.0,255.8,261.6,267.4,273.2,279.0,284.8,290.6,296.4,302.2,308.0,313.8,319.6,325.4,331.2,337.0,343.2,349.4,355.6,361.8,368.0,374.2,380.4,386.6,392.8,399.0,405.2,411.4,417.6,423.8,430.0,433.4,436.8,440.2,443.6,447.0,450.4,453.8,457.2,460.6,464.0,467.4,470.8,474.2,477.6,481.0,484.1333333333333,487.26666666666665,490.4,493.53333333333336,496.6666666666667,499.8,502.93333333333334,506.06666666666666,509.2,512.3333333333334,515.4666666666667,518.6,521.7333333333333,524.8666666666667,528.0,532.8,537.6,542.4,547.2,552.0,556.8,561.6,566.4,571.2,576.0,580.8,585.6,590.4,595.2,600.0,602.0,604.0,606.0,608.0,610.0,612.0,614.0,616.0,618.0}; 
//HOLDER_I[H+1]
const double t[210]    = {20400.0,20460.0,20520.0,20580.0,20640.0,20700.0,20760.0,20820.0,20880.0,20940.0,21000.0,21060.0,21120.0,21180.0,21240.0,21300.0,21360.0,21420.0,21480.0,21540.0,21600.0,21660.0,21720.0,21780.0,21840.0,21900.0,21960.0,22020.0,22080.0,22140.0,22200.0,22260.0,22320.0,22380.0,22440.0,22500.0,22560.0,22620.0,22680.0,22740.0,22800.0,22860.0,22920.0,22980.0,23040.0,23100.0,23160.0,23220.0,23280.0,23340.0,23400.0,23460.0,23520.0,23580.0,23640.0,23700.0,23760.0,23820.0,23880.0,23940.0,24000.0,24060.0,24120.0,24180.0,24240.0,24300.0,24360.0,24420.0,24480.0,24540.0,24600.0,24660.0,24720.0,24780.0,24840.0,24900.0,24960.0,25020.0,25080.0,25140.0,25200.0,25260.0,25320.0,25380.0,25440.0,25500.0,25560.0,25620.0,25680.0,25740.0,25800.0,25860.0,25920.0,25980.0,26040.0,26100.0,26160.0,26220.0,26280.0,26340.0,26400.0,26460.0,26520.0,26580.0,26640.0,26700.0,26760.0,26820.0,26880.0,26940.0,27000.0,27060.0,27120.0,27180.0,27240.0,27300.0,27360.0,27420.0,27480.0,27540.0,27600.0,27660.0,27720.0,27780.0,27840.0,27900.0,27960.0,28020.0,28080.0,28140.0,28200.0,28260.0,28320.0,28380.0,28440.0,28500.0,28560.0,28620.0,28680.0,28740.0,28800.0,28860.0,28920.0,28980.0,29040.0,29100.0,29160.0,29220.0,29280.0,29340.0,29400.0,29460.0,29520.0,29580.0,29640.0,29700.0,29760.0,29820.0,29880.0,29940.0,30000.0,30060.0,30120.0,30180.0,30240.0,30300.0,30360.0,30420.0,30480.0,30540.0,30600.0,30660.0,30720.0,30780.0,30840.0,30900.0,30960.0,31020.0,31080.0,31140.0,31200.0,31260.0,31320.0,31380.0,31440.0,31500.0,31560.0,31620.0,31680.0,31740.0,31800.0,31860.0,31920.0,31980.0,32040.0,32100.0,32160.0,32220.0,32280.0,32340.0,32400.0,32460.0,32520.0,32580.0,32640.0,32700.0,32760.0,32820.0,32880.0,32940.0}; 
//HOLDER_t[H+1]

// Initial 
const double T_ini    = 54.48259; 
//HOLDER_T_ini
const double V_ini    = 0.10002; 
//HOLDER_V_ini
const double E_ini    = 5400.00000; 
//HOLDER_E_ini
const double t_ini    = 20400.00000; 
//HOLDER_t_ini
int u                 = 340; 
//HOLDER_u
int taumin            = 5; 
//HOLDER_taumin
const int modeAns     = 7; 
//HOLDER_modeAns
int mvalve            = 0; 
//HOLDER_mvalve

// External actions
const double va[210]   = {0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
//HOLDER_va[H+1]

//const int dt  = 1;



const zonotope_t zonotopes[id_zonotope_t] = {
{40.0,40.4688,0.1,0.2},
{40.4688,40.9375,0.1,0.2},
{40.9375,41.4062,0.1,0.2},
{41.4062,41.875,0.1,0.2},
{41.875,42.3438,0.1,0.2},
{42.3438,42.8125,0.1,0.2},
{42.8125,43.2812,0.1,0.2},
{43.2812,43.75,0.1,0.2},
{43.75,44.2188,0.1,0.2},
{44.2188,44.6875,0.1,0.2},
{44.6875,45.1562,0.1,0.2},
{45.1562,45.625,0.1,0.2},
{45.625,46.0938,0.1,0.2},
{46.0938,46.5625,0.1,0.2},
{46.5625,47.0312,0.1,0.2},
{47.0312,47.5,0.1,0.2},
{47.5,47.9688,0.1,0.2},
{47.9688,48.4375,0.1,0.2},
{48.4375,48.9062,0.1,0.2},
{48.9062,49.375,0.1,0.2},
{49.375,49.8438,0.1,0.2},
{49.8438,50.3125,0.1,0.2},
{50.3125,50.7812,0.1,0.2},
{50.7812,51.25,0.1,0.2},
{51.25,51.7188,0.1,0.2},
{51.7188,52.1875,0.1,0.2},
{52.1875,52.6562,0.1,0.2},
{52.6562,53.125,0.1,0.2},
{53.125,53.5938,0.1,0.2},
{53.5938,54.0625,0.1,0.2},
{54.0625,54.5312,0.1,0.2},
{54.5312,55.0,0.1,0.2},
{55.0,55.4688,0.1,0.2},
{55.4688,55.9375,0.1,0.2},
{55.9375,56.4062,0.1,0.2},
{56.4062,56.875,0.1,0.2},
{56.875,57.3438,0.1,0.2},
{57.3438,57.8125,0.1,0.2},
{57.8125,58.2812,0.1,0.2},
{58.2812,58.75,0.1,0.2},
{58.75,59.2188,0.1,0.2},
{59.2188,59.6875,0.1,0.2},
{59.6875,60.1562,0.1,0.2},
{60.1562,60.625,0.1,0.2},
{60.625,61.0938,0.1,0.2},
{61.0938,61.5625,0.1,0.2},
{61.5625,62.0312,0.1,0.2},
{62.0312,62.5,0.1,0.2},
{62.5,62.9688,0.1,0.2},
{62.9688,63.4375,0.1,0.2},
{63.4375,63.9062,0.1,0.2},
{63.9062,64.375,0.1,0.2},
{64.375,64.8438,0.1,0.2},
{64.8438,65.3125,0.1,0.2},
{65.3125,65.7812,0.1,0.2},
{65.7812,66.25,0.1,0.2},
{66.25,66.7188,0.1,0.2},
{66.7188,67.1875,0.1,0.2},
{67.1875,67.6562,0.1,0.2},
{67.6562,68.125,0.1,0.2},
{68.125,68.5938,0.1,0.2},
{68.5938,69.0625,0.1,0.2},
{69.0625,69.5312,0.1,0.2},
{69.5312,70.0,0.1,0.2}
};



clock xc, yc, rc;
double Tg   = 55.0;
int    flag = 0;
//const double horizont = 3*tau; // multiple of tau  p1=2*tau, p2=3*tau, p3=2*tau, p4=tau: Horizont={}

const int nrSteps = 15; //6(work sometimes)
const int step    = 5;    //30, 5
const int horizon = step*nrSteps;
double pareto     = 0.0;
int it = 0;

double Tnext = 0.0;
double Vnext = 0.0;
double Enext = 0.0;

id_zonotope_t zi = 0;
int patu = 0;

id_zonotope_t getZono()
{
    for(i: id_zonotope_t )            //for(i: id_zonotope_t )
    {
        if (zonotopes[i][0]&lt;=x[0] &amp;&amp; x[0] &lt; zonotopes[i][1] &amp;&amp; zonotopes[i][2]&lt;=x[1] &amp;&amp; x[1] &lt;= zonotopes[i][3]) 
        {          
            return i;
        }
    }
    return -1; 
}
double paretoFunc()
{
	double alpha = 1.0;
	return pareto+( alpha*x[2] + (1.0-alpha)*fabs(Tg-x[0]) );
}

double dt = 60.0;
double E = 0.0,V = 0.0,T = 0.0;
int j;
int h;

double fer = 0.0;

int index1=0,index2=0,index3=0;

double dvs_tm    = 1*3.0; // 1*12 
double media_tm1 = 7*60.0/5;
double media_tm2 = 13*60.0/5;
double media_tm3 = 19*60.0/5;

int valve[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int a = 0, b = 0, c = 0;
int tm = 0;

void initialize()
{
    x[0] = T_ini;
    x[1] = V_ini;
    x[2] = E_ini;
    tm = fint(t_ini/(60.0*5));
    for(j = 0; j &lt; 14; j=j+1)
    {
        a = fint( normal(media_tm1, dvs_tm) );        
        b = fint( normal(media_tm2, dvs_tm) );
        c = fint( normal(media_tm3, dvs_tm) );
        if(tm &lt;= a &amp;&amp; a &lt;= tm+15)
        {
            valve[a-tm] = 1;
        }
        if(tm &lt;= b &amp;&amp; b &lt;= tm+15)
        {
            valve[b-tm] = 1;
        }
        if(tm &lt;= c &amp;&amp; c &lt;= tm+15)
        {
            valve[c-tm] = 1;
        }
    }

    {
    int p,r,v,f;
    p = modes[modeAns][0];
    r = modes[modeAns][1];
    v = mvalve;             // v = random(0.1);va[h];
    f = modes[modeAns][3];  ;
    for( j = 0; j &lt; taumin; j=j+1)
    {       
        E = x[2] + dt*r*2;
        V = x[1] + dt*rateVo*( 0.1*p - x[1] );
        T = x[0] + dt*(1/(0.1*p))*( 
               - factorTe*2.8811059759131854e-06*(x[0]-T_env[j]) 
               - v*9.34673995175876e-05*(x[0]-T_in[j])
               - f*0.001005026*(0.1*p-x[1])*(x[0]-T_in[j])
               + factorI*0.7*0.7*8.403225763080125e-07*I[j]
               + r*0.008801843 );// 0.00048018432931886426 - va[h]*9.34673995175876e-05*(x[0]-T_in[h])
        x[2]=E;
        x[1]=V;
        x[0]=T;
    }
    Tnext = x[0];
    Vnext = x[1];
    Enext = x[2];
    }
    //zi = getZonotope();
    //zi = getZono();
    zi = tm;
    return;
}

void update(int k)
{
    int p,r,v,f;
    p = modes[mode][0];  
    r = modes[mode][1];    
    mvalve = valve[k];
    v = mvalve;
    // double normal(double mean, double stddev)
    //v = normal();

    f = modes[mode][3];
     
    //fer  =  random(0,3);

    for(j=0; j &lt; taumin; j=j+1)
    {
        h = k*taumin+j;
        E = x[2] + dt*r*2;
        V = x[1] + dt*rateVo*( 0.1*p - x[1] );
        T = x[0] + dt*(1/(0.1*p))*( 
                        - factorTe*2.8811059759131854e-06*(x[0]-T_env[h]) 
                        - v*9.34673995175876e-05*(x[0]-T_in[h])
                        - f*0.001005026*(0.1*p-x[1])*(x[0]-T_in[h])
                        + factorI*0.7*0.7*8.403225763080125e-07*I[h]
                        + r*0.008801843 ); // 0.00048018432931886426 - va[h]*9.34673995175876e-05*(x[0]-T_in[h])
        x[2]=E;
        x[1]=V;
        x[0]=T;
    }
    return;
}

// zonotope_t = 128
const int allPatterns[id_list_patterns_t][id_pattern_t][pattern_len_t] = {
{{0,7,-1}, {1,6,-1}, {2,1,-1}, {4,1,-1}, {6,1,-1}, {0,1,6}, {0,4,1}, {0,6,1}, {2,0,1}, {3,0,7}, {3,3,0}, {3,5,0}, {3,7,0}, {4,0,1}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,1}, {7,0,7}, {7,3,0}, {7,5,0}, {7,7,0}},
{{0,7,-1}, {1,6,-1}, {2,1,-1}, {3,0,-1}, {4,1,-1}, {6,1,-1}, {0,1,6}, {0,4,1}, {0,6,1}, {2,0,1}, {4,0,1}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,1}, {7,0,7}, {7,3,0}, {7,5,0}, {7,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {2,1,-1}, {3,0,-1}, {4,1,-1}, {6,1,-1}, {0,1,6}, {0,4,1}, {0,6,1}, {2,0,7}, {4,0,1}, {5,0,7}, {5,3,0}, {5,5,0}, {7,0,7}, {7,3,0}, {7,5,0}, {7,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {2,1,-1}, {3,0,-1}, {4,1,-1}, {6,1,-1}, {0,1,6}, {0,4,1}, {0,6,1}, {1,4,0}, {2,0,7}, {4,0,1}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {7,0,7}, {7,3,0}, {7,5,0}, {7,7,0}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {3,0,-1}, {4,1,-1}, {7,0,-1}, {0,1,6}, {0,4,1}, {0,6,3}, {1,4,0}, {2,0,7}, {2,1,6}, {2,4,1}, {4,0,7}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {6,1,6}, {6,4,1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {3,0,-1}, {4,1,-1}, {7,0,-1}, {0,1,6}, {0,6,3}, {1,4,0}, {2,0,7}, {2,1,6}, {4,0,7}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {6,1,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {3,0,-1}, {7,0,-1}, {0,1,6}, {0,6,3}, {1,4,0}, {2,0,7}, {2,1,6}, {4,0,7}, {4,1,6}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {6,1,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {3,0,-1}, {7,0,-1}, {0,1,6}, {0,6,3}, {1,4,0}, {2,0,7}, {2,1,6}, {4,0,7}, {4,1,6}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {6,1,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {3,0,-1}, {7,0,-1}, {0,6,3}, {1,4,0}, {2,0,7}, {2,1,6}, {4,0,7}, {4,1,6}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {1,6,-1}, {3,0,-1}, {7,0,-1}, {0,6,3}, {1,4,0}, {2,0,7}, {4,0,7}, {4,1,6}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {7,0,-1}, {0,6,3}, {2,0,7}, {4,0,7}, {5,0,7}, {5,3,0}, {5,5,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,6,3}, {2,0,7}, {4,0,7}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,6,3}, {2,0,7}, {2,3,0}, {4,0,7}, {4,3,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {6,0,7}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,5,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,5,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,5,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,5,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,5,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {3,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {2,0,7}, {2,3,0}, {2,5,0}, {2,7,0}, {4,0,7}, {4,3,0}, {4,5,0}, {6,0,7}, {6,3,0}, {6,5,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {2,0,-1}, {3,0,-1}, {4,0,-1}, {5,0,-1}, {7,0,-1}, {0,0,7}, {0,6,3}, {6,0,7}, {6,3,0}, {6,5,0}, {6,7,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {2,0,-1}, {3,0,-1}, {4,0,-1}, {5,0,-1}, {0,0,7}, {0,6,3}, {6,0,7}, {6,5,0}, {7,0,6}, {7,4,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {0,0,7}, {0,6,3}, {3,0,6}, {3,4,0}, {6,0,7}, {6,5,0}, {7,0,6}, {7,4,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,7,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {0,6,7}, {3,0,6}, {3,4,0}, {6,0,7}, {6,5,0}, {7,0,6}, {7,4,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {0,6,7}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {3,0,6}, {6,5,0}, {7,0,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {3,0,6}, {7,0,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {0,5,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {0,5,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {0,5,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {5,0,-1}, {6,0,-1}, {0,5,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {0,5,0}, {5,0,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {5,0,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {5,0,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {5,0,6}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {2,0,-1}, {4,0,-1}, {6,0,-1}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {4,0,-1}, {2,0,6}, {2,4,0}, {6,0,6}, {6,4,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}},
{{0,6,-1}, {4,0,-1}, {2,0,6}, {2,4,0}, {6,0,6}, {6,4,0}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}, {-2,-2,-2}}
};



</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>
/*
predict

*/
bool validPatternId(id_pattern_t p,id_list_patterns_t  ind_patterns)
{
    if (allPatterns[ind_patterns][p][1] == -2) 
        return false;
    else   
        return true;
}

int getAvailable(id_list_patterns_t ind_patterns,id_pattern_t p_id)
{
    int av=0;
    for (i:pattern_len_t)
    {
        if (allPatterns[ind_patterns][p_id][i] &gt;= 0)
            av = av + 1;
    }
    return av;
}

void applyMode(id_list_patterns_t ind_patterns, id_pattern_t p_id, int ppos)  // int?
{   
    mode = allPatterns[ind_patterns][p_id][ppos]; 
}

bool includes(const zonotope_t&amp; a, double &amp;x[3])
{
  return (a[0]&lt;=x[0] &amp;&amp; x[0] &lt; a[1] &amp;&amp; a[2]&lt;=x[1] &amp;&amp; x[1] &lt;= a[3]);
}


id_zonotope_t getZonotope()
{
    //for(i: int[0,127])            
    for(i: id_zonotope_t )
    {
        if (includes(zonotopes[i], x))
        { // this
            //out = allPatterns[i][0];
            return i;
        }
    }

    flag = 1;
    return -1; 
}</declaration>
		<location id="id0" x="-399" y="-1547">
			<urgent/>
		</location>
		<location id="id1" x="-400" y="-1437">
			<urgent/>
		</location>
		<location id="id2" x="-68" y="-1437">
			<urgent/>
		</location>
		<location id="id3" x="-400" y="-1292">
			<urgent/>
		</location>
		<location id="id4" x="-68" y="-1292">
			<urgent/>
		</location>
		<location id="id5" x="-399" y="-1054">
			<label kind="invariant" x="-382" y="-1062">xc &lt;= step</label>
		</location>
		<location id="id6" x="-400" y="-952">
			<urgent/>
		</location>
		<location id="id7" x="-400" y="-833">
			<name x="-417" y="-808">DONE</name>
			<urgent/>
		</location>
		<location id="id8" x="-9" y="-927">
			<name x="-43" y="-876">__RESET__</name>
		</location>
		<init ref="id0"/>
		<transition controllable="false">
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="assignment" x="-382" y="-1181">applyMode(ind_l_patterns,p_id,ppos),
ppos=ppos+1,
mvalve = valve[it]</label>
		</transition>
		<transition controllable="false">
			<source ref="id8"/>
			<target ref="id8"/>
			<nail x="-60" y="-1029"/>
			<nail x="59" y="-1029"/>
		</transition>
		<transition controllable="false">
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="-391" y="-910">yc &gt;  horizon</label>
		</transition>
		<transition controllable="false">
			<source ref="id6"/>
			<target ref="id1"/>
			<label kind="guard" x="-595" y="-1207">yc &lt;= horizon</label>
			<label kind="assignment" x="-570" y="-1173">it=it+1</label>
			<nail x="-527" y="-952"/>
			<nail x="-527" y="-1437"/>
		</transition>
		<transition controllable="false">
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-374" y="-1037">xc == step</label>
			<label kind="assignment" x="-374" y="-1020">update(it),
xc = 0,
rc = 0,
pareto = paretoFunc()</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="select" x="-247" y="-1335">p : id_pattern_t</label>
			<label kind="guard" x="-298" y="-1318">validPatternId(p,ind_l_patterns)</label>
			<label kind="assignment" x="-238" y="-1292">p_id = p,
ppos = 0,
availableInPattern = getAvailable(ind_l_patterns,p),
visitedPatterns=visitedPatterns+1</label>
		</transition>
		<transition controllable="false">
			<source ref="id2"/>
			<target ref="id4"/>
			<label kind="assignment" x="-162" y="-1386">ind_l_patterns = getZonotope()</label>
		</transition>
		<transition controllable="false">
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-485" y="-1369">(ppos+1) &lt;= availableInPattern</label>
		</transition>
		<transition controllable="false">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="-323" y="-1462">(ppos+1)&gt; availableInPattern</label>
		</transition>
		<transition controllable="false">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-382" y="-1521">initialize(),
it=0,
xc=0,
rc=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system Process;
                    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 1 [&lt;=horizon] { visitedPatterns,mvalve,ppos } under Opt</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 1 [&lt;=horizon] { fer } under Opt</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 1 [&lt;=horizon] { ppos,visitedPatterns } under Opt</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 1 [&lt;=100] { ppos }</formula>
			<comment></comment>
		</query>
		<query>
			<formula>strategy Opt = minE (pareto) [&lt;=horizon]: &lt;&gt; GTime&gt;=horizon</formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 1 [&lt;=horizon] { mvalve,x[0] }</formula>
			<comment></comment>
		</query>
		<query>
			<formula>simulate 1 [&lt;=horizon] { visitedPatterns,mvalve,ppos,x[0] } under Opt</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
